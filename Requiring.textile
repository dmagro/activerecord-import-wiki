There are essentially two ways to require activerecord-import:

* Using Bundler (default Rails 3 app uses this)
* Not using Bundler

_These instructions only work for activerecord-import 0.2.0 or higher. If you have a version before 0.2.0 then upgrade._

h2. Using Bundler

There are two ways you can use Bundler. First, the Rails 3 way.

h3. The Rails 3 Way - autoloading gem dependencies

Rails 3 by default autoloads your gem dependencies (thanks to config/application.rb). When this happens you only need to make sure activerecord-import is specified as a gem dependency in your Gemfile. 

<pre>
  gem "activerecord-import", ">= 0.2.0"
</pre>

You might however need to have the Import functionality for specific execution path with bundler having the gem not required by default for the full app.

<pre>
  gem 'activerecord-import', '~> 0.2.9', :require => false
</pre>

This does Not work if we just do require 'activerecord-import' in the file using the gem.
However, we still want to use the gem. 
This can still be done using following snippet for manual include in your file:

<pre>
  require "activerecord-import/base"
  ActiveRecord::Import.require_adapter('mysql2')
</pre>

The mysql2 is your adapter. Could be dynamically got from ActiveRecord::Base.configurations.

This allows it be used in a more isolated fashion, impacting only the file that it is needed.

h3. Not autoloading

If your gem dependencies aren't autoloaded then simply require activerecord-import after activerecord has been loaded, ie:

<pre>
require 'active_record'
require 'activerecord-import'
</pre>

That's it. 